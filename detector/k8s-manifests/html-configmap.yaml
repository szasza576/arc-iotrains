apiVersion: v1
kind: ConfigMap
metadata:
  name: index-html-configmap
  namespace: minifigures
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="theme-color" content="#025928">
        <title>IoTrain</title>
        <script>
            var url_params = new URLSearchParams(window.location.search);
            var refresh_interval = url_params.get('refresh_ms');
            if (refresh_interval == null) {
                insertUrlParam("refresh_ms", 1000)
                refresh_interval = 1000
            }
            var img;
            var img2;
            var firstTimeDraw = true
            var context;
    
            function init() {
                var canvas = document.getElementById("canvas");
                context = canvas.getContext("2d");
                img = new Image();
                img2 = new Image();
                img.onload = function () {
                    drawImages();
                }
                refresh();
                setInterval("refresh()", refresh_interval)
            }
    
            function refresh() {
                img.src = "images/original.jpg" + "?" + new Date() //We need to add this so the canvas thinks its a new image, otherwise it does not load it again
                img2.src = "images/masked.jpg" + "?" + new Date() //We need to add this so the canvas thinks its a new image, otherwise it does not load it again
            }
    
            function drawImages() {
                if (firstTimeDraw) {
                    canvas.setAttribute("width", img.width * 2);
                    canvas.setAttribute("height", img.height);
                    firstTimeDraw = false;
                }
                context.drawImage(img, 0, 0);
                context.drawImage(img2, canvas.width / 2, 0);
            }
    
            function insertUrlParam(key, value) {
                if (history.pushState) {
                    let searchParams = new URLSearchParams(window.location.search);
                    searchParams.set(key, value);
                    let newurl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?' + searchParams.toString();
                    window.history.pushState({ path: newurl }, '', newurl);
                }
            }
        </script>
    </head>
    
    <body onload="javascript:init();" style="text-align: center;">
        <canvas id="canvas" style="max-width: 100%;"></canvas>
    </body>
    
    </html>